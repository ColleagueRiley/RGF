.TH "Callbacks" 3 "Tue Jul 23 2024" "RGFW" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Callbacks \- Callbacks
.SH SYNOPSIS
.br
.PP
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef void(* \fBRGFW_windowmovefunc\fP) (\fBRGFW_window\fP *win, \fBRGFW_rect\fP r)"
.br
.ti -1c
.RI "typedef void(* \fBRGFW_windowresizefunc\fP) (\fBRGFW_window\fP *win, \fBRGFW_rect\fP r)"
.br
.ti -1c
.RI "typedef void(* \fBRGFW_windowquitfunc\fP) (\fBRGFW_window\fP *win)"
.br
.ti -1c
.RI "typedef void(* \fBRGFW_focusfunc\fP) (\fBRGFW_window\fP *win, \fBb8\fP inFocus)"
.br
.ti -1c
.RI "typedef void(* \fBRGFW_mouseNotifyfunc\fP) (\fBRGFW_window\fP *win, \fBRGFW_point\fP point, \fBb8\fP status)"
.br
.ti -1c
.RI "typedef void(* \fBRGFW_mouseposfunc\fP) (\fBRGFW_window\fP *win, \fBRGFW_point\fP point)"
.br
.ti -1c
.RI "typedef void(* \fBRGFW_dndInitfunc\fP) (\fBRGFW_window\fP *win, \fBRGFW_point\fP point)"
.br
.ti -1c
.RI "typedef void(* \fBRGFW_windowrefreshfunc\fP) (\fBRGFW_window\fP *win)"
.br
.ti -1c
.RI "typedef void(* \fBRGFW_keyfunc\fP) (\fBRGFW_window\fP *win, \fBu32\fP keycode, char keyName[16], \fBu8\fP lockState, \fBb8\fP pressed)"
.br
.ti -1c
.RI "typedef void(* \fBRGFW_mousebuttonfunc\fP) (\fBRGFW_window\fP *win, \fBu8\fP button, double scroll, \fBb8\fP pressed)"
.br
.ti -1c
.RI "typedef void(* \fBRGFW_jsButtonfunc\fP) (\fBRGFW_window\fP *win, \fBu16\fP joystick, \fBu8\fP button, \fBb8\fP pressed)"
.br
.ti -1c
.RI "typedef void(* \fBRGFW_jsAxisfunc\fP) (\fBRGFW_window\fP *win, \fBu16\fP joystick, \fBRGFW_point\fP axis[2], \fBu8\fP axisesCount)"
.br
.ti -1c
.RI "typedef void(* \fBRGFW_dndfunc\fP) (\fBRGFW_window\fP *win, char droppedFiles[\fBRGFW_MAX_DROPS\fP][\fBRGFW_MAX_PATH\fP], \fBu32\fP droppedFilesCount)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBRGFWDEF\fP void \fBRGFW_setWindowMoveCallback\fP (\fBRGFW_windowmovefunc\fP func)"
.br
.ti -1c
.RI "\fBRGFWDEF\fP void \fBRGFW_setWindowResizeCallback\fP (\fBRGFW_windowresizefunc\fP func)"
.br
.ti -1c
.RI "\fBRGFWDEF\fP void \fBRGFW_setWindowQuitCallback\fP (\fBRGFW_windowquitfunc\fP func)"
.br
.ti -1c
.RI "\fBRGFWDEF\fP void \fBRGFW_setMousePosCallback\fP (\fBRGFW_mouseposfunc\fP func)"
.br
.ti -1c
.RI "\fBRGFWDEF\fP void \fBRGFW_setWindowRefreshCallback\fP (\fBRGFW_windowrefreshfunc\fP func)"
.br
.ti -1c
.RI "\fBRGFWDEF\fP void \fBRGFW_setFocusCallback\fP (\fBRGFW_focusfunc\fP func)"
.br
.ti -1c
.RI "\fBRGFWDEF\fP void \fBRGFW_setMouseNotifyCallBack\fP (\fBRGFW_mouseNotifyfunc\fP func)"
.br
.ti -1c
.RI "\fBRGFWDEF\fP void \fBRGFW_setDndCallback\fP (\fBRGFW_dndfunc\fP func)"
.br
.ti -1c
.RI "\fBRGFWDEF\fP void \fBRGFW_setDndInitCallback\fP (\fBRGFW_dndInitfunc\fP func)"
.br
.ti -1c
.RI "\fBRGFWDEF\fP void \fBRGFW_setKeyCallback\fP (\fBRGFW_keyfunc\fP func)"
.br
.ti -1c
.RI "\fBRGFWDEF\fP void \fBRGFW_setMouseButtonCallback\fP (\fBRGFW_mousebuttonfunc\fP func)"
.br
.ti -1c
.RI "\fBRGFWDEF\fP void \fBRGFW_setjsButtonCallback\fP (\fBRGFW_jsButtonfunc\fP func)"
.br
.ti -1c
.RI "\fBRGFWDEF\fP void \fBRGFW_setjsAxisCallback\fP (\fBRGFW_jsAxisfunc\fP func)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Event callbacks, these are completely optional, you can use the normal RGFW_checkEvent() method if you prefer that 
.SH "Typedef Documentation"
.PP 
.SS "typedef void(* RGFW_dndfunc) (\fBRGFW_window\fP *win, char droppedFiles[\fBRGFW_MAX_DROPS\fP][\fBRGFW_MAX_PATH\fP], \fBu32\fP droppedFilesCount)"

.SS "typedef void(* RGFW_dndInitfunc) (\fBRGFW_window\fP *win, \fBRGFW_point\fP point)"

.SS "typedef void(* RGFW_focusfunc) (\fBRGFW_window\fP *win, \fBb8\fP inFocus)"

.SS "typedef void(* RGFW_jsAxisfunc) (\fBRGFW_window\fP *win, \fBu16\fP joystick, \fBRGFW_point\fP axis[2], \fBu8\fP axisesCount)"

.SS "typedef void(* RGFW_jsButtonfunc) (\fBRGFW_window\fP *win, \fBu16\fP joystick, \fBu8\fP button, \fBb8\fP pressed)"

.SS "typedef void(* RGFW_keyfunc) (\fBRGFW_window\fP *win, \fBu32\fP keycode, char keyName[16], \fBu8\fP lockState, \fBb8\fP pressed)"

.SS "typedef void(* RGFW_mousebuttonfunc) (\fBRGFW_window\fP *win, \fBu8\fP button, double scroll, \fBb8\fP pressed)"

.SS "typedef void(* RGFW_mouseNotifyfunc) (\fBRGFW_window\fP *win, \fBRGFW_point\fP point, \fBb8\fP status)"

.SS "typedef void(* RGFW_mouseposfunc) (\fBRGFW_window\fP *win, \fBRGFW_point\fP point)"

.SS "typedef void(* RGFW_windowmovefunc) (\fBRGFW_window\fP *win, \fBRGFW_rect\fP r)"

.SS "typedef void(* RGFW_windowquitfunc) (\fBRGFW_window\fP *win)"

.SS "typedef void(* RGFW_windowrefreshfunc) (\fBRGFW_window\fP *win)"

.SS "typedef void(* RGFW_windowresizefunc) (\fBRGFW_window\fP *win, \fBRGFW_rect\fP r)"

.SH "Function Documentation"
.PP 
.SS "\fBRGFWDEF\fP void RGFW_setDndCallback (\fBRGFW_dndfunc\fP func)"
set callback for a drop event event 
.SS "\fBRGFWDEF\fP void RGFW_setDndInitCallback (\fBRGFW_dndInitfunc\fP func)"
set callback for a start of a drop event 
.SS "\fBRGFWDEF\fP void RGFW_setFocusCallback (\fBRGFW_focusfunc\fP func)"
set callback for a window focus change event 
.SS "\fBRGFWDEF\fP void RGFW_setjsAxisCallback (\fBRGFW_jsAxisfunc\fP func)"
set callback for a joystick axis mov event 
.SS "\fBRGFWDEF\fP void RGFW_setjsButtonCallback (\fBRGFW_jsButtonfunc\fP func)"
set callback for a controller button (press / release ) event 
.SS "\fBRGFWDEF\fP void RGFW_setKeyCallback (\fBRGFW_keyfunc\fP func)"
set callback for a key (press / release ) event 
.SS "\fBRGFWDEF\fP void RGFW_setMouseButtonCallback (\fBRGFW_mousebuttonfunc\fP func)"
set callback for a mouse button (press / release ) event 
.SS "\fBRGFWDEF\fP void RGFW_setMouseNotifyCallBack (\fBRGFW_mouseNotifyfunc\fP func)"
set callback for a mouse notify event 
.SS "\fBRGFWDEF\fP void RGFW_setMousePosCallback (\fBRGFW_mouseposfunc\fP func)"
set callback for a mouse move event 
.SS "\fBRGFWDEF\fP void RGFW_setWindowMoveCallback (\fBRGFW_windowmovefunc\fP func)"
set callback for a window move event 
.SS "\fBRGFWDEF\fP void RGFW_setWindowQuitCallback (\fBRGFW_windowquitfunc\fP func)"
set callback for a window quit event 
.SS "\fBRGFWDEF\fP void RGFW_setWindowRefreshCallback (\fBRGFW_windowrefreshfunc\fP func)"
set callback for a window refresh event 
.SS "\fBRGFWDEF\fP void RGFW_setWindowResizeCallback (\fBRGFW_windowresizefunc\fP func)"
set callback for a window resize event 
.SH "Author"
.PP 
Generated automatically by Doxygen for RGFW from the source code\&.
